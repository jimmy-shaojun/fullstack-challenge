import { MigrationInterface, QueryRunner } from 'typeorm';

export class InitialMigration1709715047419 implements MigrationInterface {
  name = 'InitialMigration1709715047419';

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `CREATE TABLE "eth_block" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "chainId" numeric(78,0) NOT NULL, "blockNumber" numeric(78,0) NOT NULL, "hash" character varying NOT NULL, "parentHash" character varying NOT NULL, "timestamp" integer NOT NULL, "nonce" numeric(32,0) NOT NULL, "extraData" character varying NOT NULL, "size" integer NOT NULL, CONSTRAINT "UQ_f2dbb4c337070d5bae1b5425121" UNIQUE ("hash"), CONSTRAINT "UQ_6d98c7e8612b0f1d54b5e7e9591" UNIQUE ("blockNumber"), CONSTRAINT "PK_e4e28efda982624b32698933bae" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "erc20_token" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "chainId" integer NOT NULL, "contractAddress" character varying NOT NULL, "name" character varying NOT NULL, "symbol" character varying NOT NULL, "totalSupply" numeric(78,0) NOT NULL, "decimals" integer NOT NULL, CONSTRAINT "UQ_90fb07a3c2e6bb567d0b76eddd8" UNIQUE ("chainId", "contractAddress"), CONSTRAINT "PK_b3f47cb08f046b57b565b65d1a0" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "curation_event" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "txnHash" character varying NOT NULL, "logIndex" integer NOT NULL, "from" character varying NOT NULL, "to" character varying NOT NULL, "uri" character varying NOT NULL, "amount" numeric(78,0) NOT NULL, "blockNumber" numeric(32,0) NOT NULL, "date" TIMESTAMP NOT NULL, "tokenId" integer, CONSTRAINT "UQ_3ff36d426d95737c176c1c90d70" UNIQUE ("txnHash", "logIndex", "blockNumber"), CONSTRAINT "PK_ecfbc0205c7324d42113e46877d" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `ALTER TABLE "curation_event" ADD CONSTRAINT "FK_f1ebf719000483e84a5c9c0bbb2" FOREIGN KEY ("tokenId") REFERENCES "erc20_token"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `ALTER TABLE "curation_event" DROP CONSTRAINT "FK_f1ebf719000483e84a5c9c0bbb2"`,
    );
    await queryRunner.query(`DROP TABLE "curation_event"`);
    await queryRunner.query(`DROP TABLE "erc20_token"`);
    await queryRunner.query(`DROP TABLE "eth_block"`);
  }
}
